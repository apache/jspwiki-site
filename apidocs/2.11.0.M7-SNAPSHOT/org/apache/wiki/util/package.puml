@startuml

    namespace org.apache.wiki.util {

        class TimedCounterList<T> [[TimedCounterList.html]] {
            +set(int, T): T
            +get(int): T
            +size(): int
            +add(int, T): void
            +remove(int): T
            +count(T): int
            +cleanup(long): void
            +getAddTime(int): long
        }

        class CryptoUtil [[CryptoUtil.html]] {
            {static} +main(String[]): void
            {static} +getSaltedPassword(byte[]): String
            {static} #getSaltedPassword(byte[], byte[]): String
            {static} +verifySaltedPassword(byte[], String): boolean
            {static} #extractPasswordHash(byte[]): byte[]
            {static} #extractSalt(byte[]): byte[]
        }

        class XmlUtil [[XmlUtil.html]] {
            {static} +parse(String, String): List<Element>
            {static} +parse(InputStream, String): List<Element>
            {static} +extractTextFromDocument(Document): String
        }

        class HttpUtil [[HttpUtil.html]] {
            {static} +getRemoteAddress(HttpServletRequest): String
            {static} +retrieveCookieValue(HttpServletRequest, String): String
            {static} +createETag(String, Date): String
            {static} +checkFor304(HttpServletRequest, String, Date): boolean
            {static} +guessValidURI(String): String
            {static} +safeGetQueryString(HttpServletRequest, Charset): String
            {static} +isIPV4Address(String): boolean
        }

        class PropertiesUtils [[PropertiesUtils.html]] {
            {static} +toSortedString(Properties): String
            {static} +toLine(String, String): String
            {static} +saveConvert(String, boolean): String
        }

        enum XHTML [[XHTML.html]] {
            {static} +a
            {static} +abbr
            {static} +acronym
            {static} +address
            {static} +applet
            {static} +area
            {static} +b
            {static} +base
            {static} +basefont
            {static} +bdo
            {static} +big
            {static} +blockquote
            {static} +body
            {static} +br
            {static} +button
            {static} +caption
            {static} +center
            {static} +cite
            {static} +code
            {static} +col
            {static} +colgroup
            {static} +dd
            {static} +del
            {static} +dfn
            {static} +dir
            {static} +div
            {static} +dl
            {static} +dt
            {static} +em
            {static} +fieldset
            {static} +font
            {static} +form
            {static} +frame
            {static} +frameset
            {static} +h1
            {static} +h2
            {static} +h3
            {static} +h4
            {static} +h5
            {static} +h6
            {static} +head
            {static} +hr
            {static} +html
            {static} +i
            {static} +iframe
            {static} +img
            {static} +input
            {static} +ins
            {static} +isindex
            {static} +kbd
            {static} +label
            {static} +legend
            {static} +li
            {static} +link
            {static} +map
            {static} +menu
            {static} +meta
            {static} +noframes
            {static} +noscript
            {static} +object
            {static} +ol
            {static} +optgroup
            {static} +option
            {static} +p
            {static} +param
            {static} +pre
            {static} +q
            {static} +s
            {static} +samp
            {static} +script
            {static} +select
            {static} +small
            {static} +span
            {static} +strike
            {static} +strong
            {static} +style
            {static} +sub
            {static} +sup
            {static} +table
            {static} +tbody
            {static} +td
            {static} +textarea
            {static} +tfoot
            {static} +th
            {static} +thead
            {static} +title
            {static} +tr
            {static} +tt
            {static} +u
            {static} +ul
            {static} +var
            {static} +XMLNS_xhtml: String
            {static} +STRICT_DTD_PubId: String
            {static} +STRICT_DTD_SysId: String
            {static} +TRANSITIONAL_DTD_PubId: String
            {static} +TRANSITIONAL_DTD_SysId: String
            {static} +FRAMESET_DTD_PubId: String
            {static} +FRAMESET_DTD_SysId: String
            {static} +CSS_style: String
            {static} +ATTR_id: String
            {static} +ATTR_class: String
            {static} +ATTR_name: String
            {static} +ATTR_type: String
            {static} +ATTR_value: String
            {static} +ATTR_href: String
            {static} +ATTR_title: String
            {static} +ATTR_width: String
            {static} +ATTR_height: String
            {static} +ATTR_border: String
            {static} +ATTR_colspan: String
            {static} +ATTR_src: String
            {static} +ATTR_alt: String
            {static} +ATTR_bgcolor: String
            {static} +ATTR_checked: String
            {static} +ATTR_cols: String
            {static} +ATTR_content: String
            {static} +ATTR_httpEquiv: String
            {static} +ATTR_scheme: String
            {static} +ATTR_rel: String
            {static} +ATTR_rows: String
            {static} +ATTR_selected: String
            {static} +ATTR_size: String
            {static} +ATTR_style: String
            {static} +ATTR_align: String
            {static} +ATTR_cellpadding: String
            {static} +ATTR_cellspacing: String
            +getName(): String
            {static} +getNamedCharacterEntity(int): String
        }

        class TextUtil [[TextUtil.html]] {
            {static} +PASSWORD_LENGTH: int
            {static} +LEGACY_CHARS_ALLOWED: String
            {static} +PUNCTUATION_CHARS_ALLOWED: String
            {static} #urlEncode(byte[]): String
            {static} #urlDecode(byte[], String): String
            {static} +urlEncodeUTF8(String): String
            {static} +urlDecodeUTF8(String): String
            {static} +urlEncode(String, String): String
            {static} +urlDecode(String, String): String
            {static} +replaceEntities(String): String
            {static} +replaceString(String, String, String): String
            {static} +replaceString(String, int, int, String): String
            {static} +replaceStringCaseUnsensitive(String, String, String): String
            {static} +parseIntParameter(String, int): int
            {static} +getIntegerProperty(Properties, String, int): int
            {static} +getBooleanProperty(Properties, String, boolean): boolean
            {static} +getStringProperty(Properties, String, String): String
            {static} +getRequiredProperty(Properties, String): String
            {static} +getCanonicalFilePathProperty(Properties, String, String): String
            {static} +isPositive(String): boolean
            {static} +normalizePostData(String): String
            {static} +beautifyString(String): String
            {static} +beautifyString(String, String): String
            {static} +cleanString(String, String): String
            {static} +createProperties(String[]): Properties
            {static} +countSections(String): int
            {static} +getSection(String, int): String
            {static} +repeatString(String, int): String
            {static} +native2Ascii(String): String
            {static} +toHexString(byte[]): String
            {static} +isNumber(String): boolean
            {static} +generateRandomPassword(): String
        }

        class CommentedProperties [[CommentedProperties.html]] {
            +CommentedProperties()
            +CommentedProperties(Properties)
            +load(InputStream): void
            +load(Reader): void
            +setProperty(String, String): Object
            +store(OutputStream, String): void
            +put(Object, Object): Object
            +putAll(Map<?, ?>): void
            +remove(Object): Object
            +toString(): String
        }

        class ClassUtil [[ClassUtil.html]] {
            {static} +MAPPINGS: String
            {static} +findClass(List<String>, List<String>, String): Class<?>
            {static} +findClass(String, String): Class<?>
            {static} +classpathEntriesUnder(String): List<String>
            {static} +getMappedObject(String): T
            {static} +getMappedObject(String, Object[]): T
            {static} +getMappedClass(String): Class<?>
            {static} +assignable(String, String): boolean
        }

        class PropertyReader [[PropertyReader.html]] {
            {static} +DEFAULT_JSPWIKI_CONFIG: String
            {static} +PARAM_CUSTOMCONFIG: String
            {static} +PARAM_CUSTOMCONFIG_CASCADEPREFIX: String
            {static} +CUSTOM_JSPWIKI_CONFIG: String
            {static} +loadWebAppProps(ServletContext): Properties
            {static} +getDefaultProperties(): Properties
            {static} +getCombinedProperties(String): Properties
            {static} +expandVars(Properties): void
            {static} +locateClassPathResource(ServletContext, String): InputStream
        }

        class ByteUtils [[ByteUtils.html]] {
            {static} +bytes2hex(byte[]): String
            {static} +byte2hex(byte): String
            {static} +parseHexBinary(String): byte[]
            {static} +hexToBin(char): int
        }

        class FormUtil [[FormUtil.html]] {
            {static} +getValues(Map<?, ?>, String): List<?>
            {static} +getNumberedValues(Map<?, ?>, String): List<?>
            {static} +requestToMap(HttpServletRequest, String): Map<String, String>
        }

        class MailUtil [[MailUtil.html]] {
            {static} #log: Logger
            {static} #DEFAULT_MAIL_JNDI_NAME: String
            {static} #DEFAULT_MAIL_HOST: String
            {static} #DEFAULT_MAIL_PORT: String
            {static} #DEFAULT_MAIL_TIMEOUT: String
            {static} #DEFAULT_MAIL_CONN_TIMEOUT: String
            {static} #DEFAULT_SENDER: String
            {static} #PROP_MAIL_JNDI_NAME: String
            {static} #PROP_MAIL_HOST: String
            {static} #PROP_MAIL_PORT: String
            {static} #PROP_MAIL_ACCOUNT: String
            {static} #PROP_MAIL_PASSWORD: String
            {static} #PROP_MAIL_TIMEOUT: String
            {static} #PROP_MAIL_CONNECTION_TIMEOUT: String
            {static} #PROP_MAIL_TRANSPORT: String
            {static} #PROP_MAIL_SENDER: String
            {static} #PROP_MAIL_STARTTLS: String
            {static} +sendMessage(Properties, String, String, String): void
            {static} #getSenderEmailAddress(Session, Properties): String
            {static} #getStandaloneMailSession(Properties): Session
            {static} #getJNDIMailSession(String): Session
        }

        class Serializer [[Serializer.html]] {
            {static} #BASE64_PREFIX: String
            {static} +deserializeFromBase64(String): Map<String, ?>
            {static} +serializeToBase64(Map<String, Serializable>): String
        }

        class PriorityList<E> [[PriorityList.html]] {
            {static} +DEFAULT_PRIORITY: int
            +add(E, int): void
            +add(E): boolean
            +get(int): E
            +size(): int
        }

        class XhtmlUtil [[XhtmlUtil.html]] {
            {static} +EXPAND_EMPTY_NODES: Format
            {static} +serialize(Element): String
            {static} +serialize(Element, boolean): String
            {static} +serialize(Element, Format): String
            {static} +element(XHTML): Element
            {static} +element(XHTML, String): Element
            {static} +link(String, String): Element
            {static} +target(String, String): Element
            {static} +img(String, String): Element
            {static} +input(String, String, String): Element
            {static} +setClass(Element, String): void
        }

        class FileUtil [[FileUtil.html]] {
            {static} +newTmpFile(String, Charset): File
            {static} +newTmpFile(String): File
            {static} +runSimpleCommand(String, String): String
            {static} +copyContents(Reader, Writer): void
            {static} +copyContents(InputStream, OutputStream): void
            {static} +readContents(InputStream, String): String
            {static} +readContents(Reader): String
            {static} +getThrowingMethod(Throwable): String
        }

        abstract class java.util.AbstractList<E> {
            {abstract} +get(int): E
        }
        java.util.AbstractList <|-- TimedCounterList

        class java.util.Properties
        java.util.Properties <|-- CommentedProperties

        java.util.AbstractList <|-- PriorityList

    }


    center footer UMLDoclet 1.1.4, PlantUML 1.2019.05
@enduml
