@startuml

    namespace org.apache.wiki.plugin {

        class Denounce [[Denounce.html]] {
            {static} +PARAM_LINK: String
            {static} +PARAM_TEXT: String
            +execute(Context, Map<String, String>): String
        }

        class ListLocksPlugin [[ListLocksPlugin.html]] {
            +execute(Context, Map<String, String>): String
        }

        class PageViewPlugin [[PageViewPlugin.html]] {
            +initialize(Engine): void
            +execute(Context, Map<String, String>): String
        }

        class org.apache.wiki.plugin.PageViewPlugin.PageViewManager [[PageViewPlugin.PageViewManager.html]] {
            +initialize(Engine): void
            +actionPerformed(WikiEvent): void
            +execute(Context, Map<String, String>): String
            #getCount(Object): int
            #storeCounters(): void
        }

        class WeblogEntryPlugin [[WeblogEntryPlugin.html]] {
            {static} +PARAM_ENTRYTEXT: String
            {static} +PARAM_BLOGNAME: String
            +getNewEntryPage(Engine, String): String
            +execute(Context, Map<String, String>): String
        }

        class Image [[Image.html]] {
            {static} +PARAM_SRC: String
            {static} +PARAM_ALIGN: String
            {static} +PARAM_HEIGHT: String
            {static} +PARAM_WIDTH: String
            {static} +PARAM_ALT: String
            {static} +PARAM_CAPTION: String
            {static} +PARAM_LINK: String
            {static} +PARAM_TARGET: String
            {static} +PARAM_STYLE: String
            {static} +PARAM_CLASS: String
            {static} +PARAM_BORDER: String
            {static} +PARAM_TITLE: String
            +execute(Context, Map<String, String>): String
        }

        class UndefinedPagesPlugin [[UndefinedPagesPlugin.html]] {
            +execute(Context, Map<String, String>): String
        }

        class Counter [[Counter.html]] {
            {static} +PARAM_NAME: String
            {static} +PARAM_INCREMENT: String
            {static} +PARAM_SHOW_RESULT: String
            {static} +PARAM_START: String
            {static} +DEFAULT_NAME: String
            +execute(Context, Map<String, String>): String
        }

        class IfPlugin [[IfPlugin.html]] {
            {static} +PARAM_GROUP: String
            {static} +PARAM_USER: String
            {static} +PARAM_IP: String
            {static} +PARAM_PAGE: String
            {static} +PARAM_CONTAINS: String
            {static} +PARAM_VAR: String
            {static} +PARAM_IS: String
            {static} +PARAM_EXISTS: String
            +execute(Context, Map<String, String>): String
            {static} +ifInclude(Context, Map<String, String>): boolean
        }

        class WeblogPlugin [[WeblogPlugin.html]] {
            {static} +DEFAULT_DATEFORMAT: String
            {static} +PARAM_STARTDATE: String
            {static} +PARAM_ENTRYFORMAT: String
            {static} +PARAM_DAYS: String
            {static} +PARAM_ALLOWCOMMENTS: String
            {static} +PARAM_MAXENTRIES: String
            {static} +PARAM_PAGE: String
            {static} +PARAM_PREVIEW: String
            {static} +ATTR_ISWEBLOG: String
            {static} +makeEntryPage(String, String, String): String
            {static} +makeEntryPage(String): String
            {static} +makeEntryPage(String, String): String
            +execute(Context, Map<String, String>): String
            +findBlogEntries(Engine, String, Date, Date): List<Page>
            +executeParser(PluginElement, Context, Map<String, String>): void
        }

        class Note [[Note.html]] {
            {static} +PROP_NOTE_IMAGE: String
            {static} +DEFAULT_NOTE_IMAGE: String
            +execute(Context, Map<String, String>): String
        }

        class SampleAjaxPlugin [[SampleAjaxPlugin.html]] {
            +execute(Context, Map<String, String>): String
            +getServletMapping(): String
            +service(HttpServletRequest, HttpServletResponse, String, List<String>): void
        }

        class Search [[Search.html]] {
            {static} +PARAM_QUERY: String
            {static} +PARAM_SET: String
            {static} +DEFAULT_SETNAME: String
            {static} +PARAM_MAX: String
            +execute(Context, Map<String, String>): String
        }

        abstract class AbstractReferralPlugin [[AbstractReferralPlugin.html]] {
            {static} +ALL_ITEMS: int
            {static} +PARAM_MAXWIDTH: String
            {static} +PARAM_SEPARATOR: String
            {static} +PARAM_AFTER: String
            {static} +PARAM_BEFORE: String
            {static} +PARAM_EXCLUDE: String
            {static} +PARAM_INCLUDE: String
            {static} +PARAM_SHOW: String
            {static} +PARAM_SHOW_VALUE_PAGES: String
            {static} +PARAM_SHOW_VALUE_COUNT: String
            {static} +PARAM_LASTMODIFIED: String
            {static} #PARAM_SORTORDER: String
            {static} #PARAM_SORTORDER_HUMAN: String
            {static} #PARAM_SORTORDER_JAVA: String
            {static} #PARAM_SORTORDER_LOCALE: String
            #m_maxwidth: int
            #m_before: String
            #m_separator: String
            #m_after: String
            #m_exclude: Pattern[]
            #m_include: Pattern[]
            #m_sorter: PageSorter
            #m_show: String
            #m_lastModified: boolean
            #m_dateLastModified: Date
            #m_dateFormat: SimpleDateFormat
            #m_engine: Engine
            +initialize(Context, Map<String, String>): void
            #filterWikiPageCollection(Collection<Page>): List<Page>
            #filterCollection(Collection<String>): List<String>
            #filterAndSortCollection(Collection<String>): List<String>
            #wikitizeCollection(Collection<String>, String, int): String
            #makeHTML(Context, String): String
        }

        class SessionsPlugin [[SessionsPlugin.html]] {
            {static} +PARAM_PROP: String
            +execute(Context, Map<String, String>): String
        }

        class BugReportHandler [[BugReportHandler.html]] {
            {static} +PARAM_TITLE: String
            {static} +PARAM_DESCRIPTION: String
            {static} +PARAM_VERSION: String
            {static} +PARAM_MAPPINGS: String
            {static} +PARAM_PAGE: String
            +execute(Context, Map<String, String>): String
        }

        class UnusedPagesPlugin [[UnusedPagesPlugin.html]] {
            {static} +PARAM_EXCLUDEATTS: String
            +execute(Context, Map<String, String>): String
        }

        class ReferringUndefinedPagesPlugin [[ReferringUndefinedPagesPlugin.html]] {
            {static} +PARAM_MAX: String
            {static} +PARAM_EXTRAS: String
            +execute(Context, Map<String, String>): String
        }

        class ReferredPagesPlugin [[ReferredPagesPlugin.html]] {
            {static} +PARAM_ROOT: String
            {static} +PARAM_DEPTH: String
            {static} +PARAM_TYPE: String
            {static} +PARAM_INCLUDE: String
            {static} +PARAM_EXCLUDE: String
            {static} +PARAM_FORMAT: String
            {static} +MIN_DEPTH: int
            {static} +MAX_DEPTH: int
            +execute(Context, Map<String, String>): String
        }

        class ReferringPagesPlugin [[ReferringPagesPlugin.html]] {
            {static} +PARAM_MAX: String
            {static} +PARAM_EXTRAS: String
            {static} +PARAM_PAGE: String
            +execute(Context, Map<String, String>): String
        }

        class IndexPlugin [[IndexPlugin.html]] {
            +execute(Context, Map<String, String>): String
        }

        class TableOfContents [[TableOfContents.html]] {
            {static} +PARAM_TITLE: String
            {static} +PARAM_NUMBERED: String
            {static} +PARAM_START: String
            {static} +PARAM_PREFIX: String
            +headingAdded(Context, Heading): void
            +execute(Context, Map<String, String>): String
        }

        class Groups [[Groups.html]] {
            +execute(Context, Map<String, String>): String
        }

        class DefaultPluginManager [[DefaultPluginManager.html]] {
            +DefaultPluginManager(Engine, Properties)
            +enablePlugins(boolean): void
            +pluginsEnabled(): boolean
            +getPluginPattern(): Pattern
            +execute(Context, String, Map<String, String>): String
            +parseArgs(String): Map<String, String>
            +execute(Context, String): String
            +modules(): Collection<WikiModuleInfo>
            +getModuleInfo(String): DefaultPluginManager.WikiPluginInfo
            +newWikiPlugin(String, ResourceBundle): Plugin
        }

        class org.apache.wiki.plugin.DefaultPluginManager.WikiPluginInfo [[DefaultPluginManager.WikiPluginInfo.html]] {
            {static} #newInstance(String, Element, List<String>, List<String>): DefaultPluginManager.WikiPluginInfo
            #initializePlugin(DefaultPluginManager.WikiPluginInfo, Engine, List<String>, List<String>): void
            #initializeFromXML(Element): void
            {static} #newInstance(Class<?>): DefaultPluginManager.WikiPluginInfo
            +getClassName(): String
            +getAlias(): String
            +getAjaxAlias(): String
            +newPluginInstance(List<String>, List<String>): Plugin
            +getIncludeText(String): String
        }

        class RecentChangesPlugin [[RecentChangesPlugin.html]] {
            {static} +PARAM_FORMAT: String
            {static} +PARAM_TIME_FORMAT: String
            {static} +PARAM_DATE_FORMAT: String
            {static} +DEFAULT_TIME_FORMAT: String
            {static} +DEFAULT_DATE_FORMAT: String
            +execute(Context, Map<String, String>): String
        }

        class CurrentTimePlugin [[CurrentTimePlugin.html]] {
            +execute(Context, Map<String, String>): String
        }

        class WeblogArchivePlugin [[WeblogArchivePlugin.html]] {
            {static} +PARAM_PAGE: String
            +execute(Context, Map<String, String>): String
        }

        interface PluginManager [[PluginManager.html]] {
            {static} +PROP_EXTERNALJARS: String
            {static} +DEFAULT_PACKAGE: String
            {static} +PARAM_BODY: String
            {static} +PARAM_CMDLINE: String
            {static} +PARAM_BOUNDS: String
            {static} +PARAM_DEBUG: String
            {abstract} +enablePlugins(boolean): void
            {abstract} +pluginsEnabled(): boolean
            {abstract} +getPluginPattern(): Pattern
            {abstract} +execute(Context, String, Map<String, String>): String
            {abstract} +parseArgs(String): Map<String, String>
            {abstract} +execute(Context, String): String
            {abstract} +newWikiPlugin(String, ResourceBundle): Plugin
        }

        class InsertPage [[InsertPage.html]] {
            {static} +PARAM_PAGENAME: String
            {static} +PARAM_STYLE: String
            {static} +PARAM_MAXLENGTH: String
            {static} +PARAM_CLASS: String
            {static} +PARAM_SHOW: String
            {static} +PARAM_SECTION: String
            {static} +PARAM_DEFAULT: String
            {static} +ATTR_RECURSE: String
            +execute(Context, Map<String, String>): String
        }

        interface org.apache.wiki.api.plugin.Plugin {
            {abstract} +execute(Context, Map<String, String>): String
        }
        org.apache.wiki.api.plugin.Plugin <|.. Denounce

        org.apache.wiki.api.plugin.Plugin <|.. ListLocksPlugin

        AbstractReferralPlugin <|-- PageViewPlugin

        org.apache.wiki.api.plugin.Plugin <|.. PageViewPlugin

        interface org.apache.wiki.api.plugin.InitializablePlugin {
            {abstract} +initialize(Engine): void
        }
        org.apache.wiki.api.plugin.InitializablePlugin <|.. PageViewPlugin

        interface org.apache.wiki.event.WikiEventListener {
            {abstract} +actionPerformed(WikiEvent): void
        }
        org.apache.wiki.event.WikiEventListener <|.. org.apache.wiki.plugin.PageViewPlugin.PageViewManager

        PageViewPlugin +-- org.apache.wiki.plugin.PageViewPlugin.PageViewManager

        org.apache.wiki.api.plugin.Plugin <|.. WeblogEntryPlugin

        org.apache.wiki.api.plugin.Plugin <|.. Image

        AbstractReferralPlugin <|-- UndefinedPagesPlugin

        org.apache.wiki.api.plugin.Plugin <|.. Counter

        org.apache.wiki.api.plugin.Plugin <|.. IfPlugin

        org.apache.wiki.api.plugin.Plugin <|.. WeblogPlugin

        interface org.apache.wiki.api.plugin.ParserStagePlugin {
            {abstract} +executeParser(PluginElement, Context, Map<String, String>): void
        }
        org.apache.wiki.api.plugin.ParserStagePlugin <|.. WeblogPlugin

        org.apache.wiki.api.plugin.Plugin <|.. Note

        org.apache.wiki.api.plugin.Plugin <|.. SampleAjaxPlugin

        interface org.apache.wiki.ajax.WikiAjaxServlet {
            {abstract} +getServletMapping(): String
            {abstract} +service(HttpServletRequest, HttpServletResponse, String, List<String>): void
        }
        org.apache.wiki.ajax.WikiAjaxServlet <|.. SampleAjaxPlugin

        org.apache.wiki.api.plugin.Plugin <|.. Search

        org.apache.wiki.api.plugin.Plugin <|.. AbstractReferralPlugin

        org.apache.wiki.api.plugin.Plugin <|.. SessionsPlugin

        org.apache.wiki.api.plugin.Plugin <|.. BugReportHandler

        AbstractReferralPlugin <|-- UnusedPagesPlugin

        AbstractReferralPlugin <|-- ReferringUndefinedPagesPlugin

        org.apache.wiki.api.plugin.Plugin <|.. ReferredPagesPlugin

        AbstractReferralPlugin <|-- ReferringPagesPlugin

        AbstractReferralPlugin <|-- IndexPlugin

        org.apache.wiki.api.plugin.Plugin <|.. IndexPlugin

        org.apache.wiki.api.plugin.Plugin <|.. TableOfContents

        interface org.apache.wiki.parser.HeadingListener {
            {abstract} +headingAdded(Context, Heading): void
        }
        org.apache.wiki.parser.HeadingListener <|.. TableOfContents

        org.apache.wiki.api.plugin.Plugin <|.. Groups

        abstract class org.apache.wiki.modules.BaseModuleManager
        org.apache.wiki.modules.BaseModuleManager <|-- DefaultPluginManager

        PluginManager <|.. DefaultPluginManager

        class org.apache.wiki.modules.WikiModuleInfo
        org.apache.wiki.modules.WikiModuleInfo <|-- org.apache.wiki.plugin.DefaultPluginManager.WikiPluginInfo

        DefaultPluginManager +-- org.apache.wiki.plugin.DefaultPluginManager.WikiPluginInfo

        AbstractReferralPlugin <|-- RecentChangesPlugin

        org.apache.wiki.api.plugin.Plugin <|.. RecentChangesPlugin

        org.apache.wiki.api.plugin.Plugin <|.. CurrentTimePlugin

        org.apache.wiki.api.plugin.Plugin <|.. WeblogArchivePlugin

        interface org.apache.wiki.modules.ModuleManager {
            {abstract} +checkCompatibility(WikiModuleInfo): boolean
            {abstract} +getModuleInfo(String): WikiModuleInfo
            {abstract} +modules(): Collection<WikiModuleInfo>
        }
        org.apache.wiki.modules.ModuleManager <|.. PluginManager

        org.apache.wiki.api.plugin.Plugin <|.. InsertPage

    }


    center footer UMLDoclet 1.1.4, PlantUML 1.2019.05
@enduml
