@startuml

    namespace org.apache.wiki {

        abstract class WikiBackgroundThread [[WikiBackgroundThread.html]] {
            +WikiBackgroundThread(Engine, int)
            +actionPerformed(WikiEvent): void
            +shutdown(): void
            +run(): void
            +shutdownTask(): void
            +startupTask(): void
            {abstract} +backgroundTask(): void
        }

        interface Watchable [[Watchable.html]] {
            {abstract} +timeoutExceeded(String): void
            {abstract} +getName(): String
            {abstract} +isAlive(): boolean
        }

        class WikiPage [[WikiPage.html]] {
            +WikiPage(Engine, String)
            +getName(): String
            +getAttribute(String): T
            +setAttribute(String, Object): void
            +getAttributes(): Map<String, Object>
            +removeAttribute(String): T
            +getLastModified(): Date
            +setLastModified(Date): void
            +setVersion(int): void
            +getVersion(): int
            +getSize(): long
            +setSize(long): void
            +getAcl(): Acl
            +setAuthor(String): void
            +getAuthor(): String
            +getWiki(): String
            +invalidateMetadata(): void
            +hasMetadata(): boolean
            +setHasMetadata(): void
            +compareTo(Page): int
        }

        class WikiServlet [[WikiServlet.html]] {
            +init(ServletConfig): void
            +destroy(): void
            +doPost(HttpServletRequest, HttpServletResponse): void
            +doGet(HttpServletRequest, HttpServletResponse): void
        }

        interface StringTransmutator [[StringTransmutator.html]] {
            {abstract} +mutate(Context, String): String
        }

        class LinkCollector [[LinkCollector.html]] {
            +getLinks(): List<String>
            +mutate(Context, String): String
        }

        class WatchDog [[WatchDog.html]] {
            +WatchDog(Engine, Watchable)
            +WatchDog(Engine, Thread)
            {static} +getCurrentWatchDog(Engine): WatchDog
            +enable(): void
            +disable(): void
            +enterState(String): void
            +enterState(String, int): void
            +exitState(): void
            +exitState(String): void
            +isStateStackNotEmpty(): boolean
            +isWatchableAlive(): boolean
        }

        class TranslationsCheck [[TranslationsCheck.html]] {
            {static} +main(String[]): void
            +diff(String, String): Map<String, Integer>
            +detectDuplicates(String): int
        }

        class WikiContext [[WikiContext.html]] {
            {static} +ADMIN: String
            {static} +ATTACH: String
            {static} +COMMENT: String
            {static} +CONFLICT: String
            {static} +CREATE_GROUP: String
            {static} +DELETE: String
            {static} +DELETE_GROUP: String
            {static} +DIFF: String
            {static} +EDIT: String
            {static} +EDIT_GROUP: String
            {static} +ERROR: String
            {static} +FIND: String
            {static} +INFO: String
            {static} +INSTALL: String
            {static} +LOGIN: String
            {static} +LOGOUT: String
            {static} +MESSAGE: String
            {static} +NONE: String
            {static} +OTHER: String
            {static} +PREFS: String
            {static} +PREVIEW: String
            {static} +RENAME: String
            {static} +RSS: String
            {static} +UPLOAD: String
            {static} +VIEW: String
            {static} +VIEW_GROUP: String
            {static} +WORKFLOW: String
            #m_request: HttpServletRequest
            +WikiContext(Engine, Page)
            +WikiContext(Engine, HttpServletRequest, Command)
            +WikiContext(Engine, HttpServletRequest, Page)
            +WikiContext(Engine, HttpServletRequest, String)
            +getContentTemplate(): String
            +getJSP(): String
            +getRedirectURL(): String
            +getRequestContext(): String
            +setRequestContext(String): void
            +getTarget(): Object
            +getURLPattern(): String
            +getVariable(String): T
            +setVariable(String, Object): void
            +getBooleanWikiProperty(String, boolean): boolean
            +getHttpParameter(String): String
            +getHttpRequest(): HttpServletRequest
            +setTemplate(String): void
            +getName(): String
            +getTemplate(): String
            +getCurrentUser(): Principal
            +getViewURL(String): String
            +getURL(String, String): String
            +getURL(String, String, String): String
            +deepClone(): WikiContext
            +requiredPermission(): Permission
            +targetedCommand(Object): Command
            +hasAdminPermissions(): boolean
            #setDefaultTemplate(HttpServletRequest): void
            {static} #findCommand(Engine, HttpServletRequest, Page): Command
            #updateCommand(String): void
        }

        class WikiSession [[WikiSession.html]] {
            #isInGroup(Group): boolean
            +isAsserted(): boolean
            +isAuthenticated(): boolean
            +isAnonymous(): boolean
            +getLoginPrincipal(): Principal
            +getUserPrincipal(): Principal
            +getLocale(): Locale
            +addMessage(String): void
            +addMessage(String, String): void
            +clearMessages(): void
            +clearMessages(String): void
            +getMessages(): String[]
            +getMessages(String): String[]
            +getPrincipals(): Principal[]
            +getRoles(): Principal[]
            +hasPrincipal(Principal): boolean
            +actionPerformed(WikiEvent): void
            +invalidate(): void
            #injectGroupPrincipals(): void
            #injectUserProfilePrincipals(): void
            +getStatus(): String
            +getSubject(): Subject
            {static} +removeWikiSession(Engine, HttpServletRequest): void
            {static} +getWikiSession(Engine, HttpServletRequest): Session
            {static} +guestSession(Engine): Session
        }

        class InternalWikiException [[InternalWikiException.html]] {
            +InternalWikiException(String)
            +InternalWikiException(String, Throwable)
            +InternalWikiException(Throwable)
        }

        class WikiEngine [[WikiEngine.html]] {
            #managers: Map<Class<?>, Object>
            +WikiEngine(Properties)
            #WikiEngine(ServletContext, String, Properties)
            {static} +getInstance(ServletConfig): WikiEngine
            {static} +getInstance(ServletConfig, Properties): WikiEngine
            {static} +getInstance(ServletContext, Properties): WikiEngine
            +getManager(Class<T>): T
            +getManagers(Class<T>): List<T>
            +isConfigured(): boolean
            +initReferenceManager(): void
            +getWikiProperties(): Properties
            +getWorkDir(): String
            +getTemplateDir(): String
            +getStartTime(): Date
            +getBaseURL(): String
            +getGlobalRSSURL(): String
            +getInterWikiURL(String): String
            +getURL(String, String, String): String
            +getFrontPage(): String
            +getServletContext(): ServletContext
            +getAllInterWikiLinks(): Collection<String>
            +getAllInlinedImagePatterns(): Collection<String>
            +getSpecialPageReference(String): String
            +getApplicationName(): String
            +getFinalPageName(String): String
            +encodeName(String): String
            +decodeName(String): String
            +getContentEncoding(): Charset
            +shutdown(): void
            +getRootPath(): String
            +addWikiEventListener(WikiEventListener): void
            +removeWikiEventListener(WikiEventListener): void
            #fireEvent(int): void
            #firePageEvent(int, String): void
            +setAttribute(String, Object): void
            +getAttribute(String): T
            +removeAttribute(String): T
        }

        class java.lang.Thread
        java.lang.Thread <|-- WikiBackgroundThread

        interface org.apache.wiki.event.WikiEventListener {
            {abstract} +actionPerformed(WikiEvent): void
        }
        org.apache.wiki.event.WikiEventListener <|.. WikiBackgroundThread

        interface org.apache.wiki.api.core.Page {
            {abstract} +getName(): String
            {abstract} +getLastModified(): Date
            {abstract} +setLastModified(Date): void
            {abstract} +setVersion(int): void
            {abstract} +getVersion(): int
            {abstract} +getSize(): long
            {abstract} +setSize(long): void
            {abstract} +setAuthor(String): void
            {abstract} +getAuthor(): String
            {abstract} +getWiki(): String
            {abstract} +invalidateMetadata(): void
            {abstract} +hasMetadata(): boolean
            {abstract} +setHasMetadata(): void
            {abstract} +getAttribute(String): T
            {abstract} +setAttribute(String, Object): void
            {abstract} +removeAttribute(String): T
            {abstract} +getAttributes(): Map<String, Object>
            {abstract} +getAcl(): Acl
            {abstract} +setAcl(Acl): void
            {abstract} +clone(): Page
        }
        org.apache.wiki.api.core.Page <|.. WikiPage

        abstract class javax.servlet.http.HttpServlet
        javax.servlet.http.HttpServlet <|-- WikiServlet

        StringTransmutator <|.. LinkCollector

        interface org.apache.wiki.api.core.Context {
            {abstract} +getPage(): Page
            {abstract} +setPage(Page): void
            {abstract} +getRealPage(): Page
            {abstract} +setRealPage(Page): Page
            {abstract} +getEngine(): Engine
            {abstract} +setRequestContext(String): void
            {abstract} +getVariable(String): T
            {abstract} +setVariable(String, Object): void
            {abstract} +getBooleanWikiProperty(String, boolean): boolean
            {abstract} +getHttpParameter(String): String
            {abstract} +getHttpRequest(): HttpServletRequest
            {abstract} +setTemplate(String): void
            {abstract} +getTemplate(): String
            {abstract} +getWikiSession(): Session
            {abstract} +getCurrentUser(): Principal
            {abstract} +hasAdminPermissions(): boolean
            {abstract} +getViewURL(String): String
            {abstract} +getRedirectURL(): String
            {abstract} +getCommand(): Command
            {abstract} +clone(): Context
            {abstract} +deepClone(): Context
        }
        org.apache.wiki.api.core.Context <|.. WikiContext

        interface org.apache.wiki.api.core.Command {
            {abstract} +targetedCommand(Object): Command
            {abstract} +getContentTemplate(): String
            {abstract} +getJSP(): String
            {abstract} +getName(): String
            {abstract} +getRequestContext(): String
            {abstract} +requiredPermission(): Permission
            {abstract} +getTarget(): Object
            {abstract} +getURLPattern(): String
        }
        org.apache.wiki.api.core.Command <|.. WikiContext

        interface org.apache.wiki.api.core.Session {
            {abstract} +isAsserted(): boolean
            {abstract} +isAuthenticated(): boolean
            {abstract} +isAnonymous(): boolean
            {abstract} +getLoginPrincipal(): Principal
            {abstract} +getUserPrincipal(): Principal
            {abstract} +getLocale(): Locale
            {abstract} +addMessage(String): void
            {abstract} +addMessage(String, String): void
            {abstract} +clearMessages(): void
            {abstract} +clearMessages(String): void
            {abstract} +getMessages(): String[]
            {abstract} +getMessages(String): String[]
            {abstract} +getPrincipals(): Principal[]
            {abstract} +getRoles(): Principal[]
            {abstract} +hasPrincipal(Principal): boolean
            {abstract} +invalidate(): void
            {abstract} +getStatus(): String
            {abstract} +getSubject(): Subject
        }
        org.apache.wiki.api.core.Session <|.. WikiSession

        class java.lang.RuntimeException
        java.lang.RuntimeException <|-- InternalWikiException

        interface org.apache.wiki.api.core.Engine {
            {abstract} +getManager(Class<T>): T
            {abstract} +getManagers(Class<T>): List<T>
            {abstract} +isConfigured(): boolean
            {abstract} +getWikiProperties(): Properties
            {abstract} +getWorkDir(): String
            {abstract} +getTemplateDir(): String
            {abstract} +getStartTime(): Date
            {abstract} +getBaseURL(): String
            {abstract} +getGlobalRSSURL(): String
            {abstract} +getInterWikiURL(String): String
            {abstract} +getURL(String, String, String): String
            {abstract} +getFrontPage(): String
            {abstract} +getServletContext(): ServletContext
            {abstract} +getAllInterWikiLinks(): Collection<String>
            {abstract} +getAllInlinedImagePatterns(): Collection<String>
            {abstract} +getSpecialPageReference(String): String
            {abstract} +getApplicationName(): String
            {abstract} +getRootPath(): String
            {abstract} +getFinalPageName(String): String
            {abstract} +encodeName(String): String
            {abstract} +decodeName(String): String
            {abstract} +getContentEncoding(): Charset
            {abstract} +addWikiEventListener(WikiEventListener): void
            {abstract} +removeWikiEventListener(WikiEventListener): void
            {abstract} +setAttribute(String, Object): void
            {abstract} +getAttribute(String): T
            {abstract} +removeAttribute(String): T
            {abstract} +shutdown(): void
        }
        org.apache.wiki.api.core.Engine <|.. WikiEngine

        WikiBackgroundThread --> org.apache.wiki.api.core.Engine: engine

        WikiContext --> org.apache.wiki.api.core.Page: realPage\npage

        WikiContext --> WikiPage: realPage\npage

        WikiContext --> WikiEngine: engine

        WikiContext --> org.apache.wiki.api.core.Command: command

        WikiContext --> WikiSession: wikiSession

    }


    center footer UMLDoclet 1.1.4, PlantUML 1.2019.05
@enduml
